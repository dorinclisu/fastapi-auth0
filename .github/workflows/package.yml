# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [master]
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 mypy pytest fastapi>=0.60.0 PyJWT>=2.8.0 pydantic-settings httpx requests types-requests
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Check with mypy
      run: |
        mypy --version
        mypy tests --namespace-packages
    - name: Test with pytest
      run: |
        python -m pytest -v
      env:
        AUTH0_DOMAIN:             ${{ secrets.AUTH0_DOMAIN }}
        AUTH0_API_AUDIENCE:       ${{ secrets.AUTH0_API_AUDIENCE }}
        AUTH0_API_AUDIENCE_WRONG: ${{ secrets.AUTH0_API_AUDIENCE_WRONG }}
        AUTH0_EXPIRED_TOKEN:      ${{ secrets.AUTH0_EXPIRED_TOKEN }}
        AUTH0_WRONG_TENANT_TOKEN: ${{ secrets.AUTH0_WRONG_TENANT_TOKEN }}
        AUTH0_M2M_CLIENT_ID:      ${{ secrets.AUTH0_M2M_CLIENT_ID }}
        AUTH0_M2M_CLIENT_SECRET:  ${{ secrets.AUTH0_M2M_CLIENT_SECRET }}
        AUTH0_SPA_CLIENT_ID:      ${{ secrets.AUTH0_SPA_CLIENT_ID }}
        AUTH0_SPA_CLIENT_SECRET:  ${{ secrets.AUTH0_SPA_CLIENT_SECRET }}
        AUTH0_SPA_USERNAME:       ${{ secrets.AUTH0_SPA_USERNAME }}
        AUTH0_SPA_PASSWORD:       ${{ secrets.AUTH0_SPA_PASSWORD }}
        AUTH0_TEST_PERMISSION:    ${{ secrets.AUTH0_TEST_PERMISSION }}
    environment: Default

  publish:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install wheel
        run: python -m pip install wheel --user
      - name: Build a binary wheel and a source tarball
        run: python setup.py sdist bdist_wheel
      # - name: Publish distribution to TestPyPI
      #   if: startsWith(github.ref, 'refs/tags') != true
      #   uses: pypa/gh-action-pypi-publish@master
      #   with:
      #     user: __token__
      #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
      #     repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
